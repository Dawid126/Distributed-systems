package gen.generated;// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: crypto_currency_price_info.proto

/**
 * Protobuf type {@code gen.generated.CryptoCurrencyPriceInfo}
 */
public final class CryptoCurrencyPriceInfo extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:gen.generated.CryptoCurrencyPriceInfo)
    CryptoCurrencyPriceInfoOrBuilder {
private static final long serialVersionUID = 0L;
  // Use gen.generated.CryptoCurrencyPriceInfo.newBuilder() to construct.
  private CryptoCurrencyPriceInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private CryptoCurrencyPriceInfo() {
    cryptoName_ = "";
    priceVolatility_ = 0;
    recommendation_ = 0;
    priceOnStockExchange_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new CryptoCurrencyPriceInfo();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private CryptoCurrencyPriceInfo(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            cryptoName_ = s;
            break;
          }
          case 16: {
            int rawValue = input.readEnum();

            priceVolatility_ = rawValue;
            break;
          }
          case 24: {
            int rawValue = input.readEnum();

            recommendation_ = rawValue;
            break;
          }
          case 34: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              priceOnStockExchange_ = new java.util.ArrayList<CryptoCurrencyPriceInfo.PriceOnStockExchange>();
              mutable_bitField0_ |= 0x00000001;
            }
            priceOnStockExchange_.add(
                input.readMessage(CryptoCurrencyPriceInfo.PriceOnStockExchange.parser(), extensionRegistry));
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        priceOnStockExchange_ = java.util.Collections.unmodifiableList(priceOnStockExchange_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return CryptoCurrencyPriceInfoOuterClass.internal_static_CryptoCurrencyPriceInfo_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return CryptoCurrencyPriceInfoOuterClass.internal_static_CryptoCurrencyPriceInfo_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            CryptoCurrencyPriceInfo.class, CryptoCurrencyPriceInfo.Builder.class);
  }

  /**
   * Protobuf enum {@code gen.generated.CryptoCurrencyPriceInfo.CryptoPriceVolatility}
   */
  public enum CryptoPriceVolatility
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>VERY_HIGH = 0;</code>
     */
    VERY_HIGH(0),
    /**
     * <code>HIGH = 1;</code>
     */
    HIGH(1),
    /**
     * <code>MEDIUM = 2;</code>
     */
    MEDIUM(2),
    /**
     * <code>LOW = 3;</code>
     */
    LOW(3),
    /**
     * <code>VERY_LOW = 4;</code>
     */
    VERY_LOW(4),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>VERY_HIGH = 0;</code>
     */
    public static final int VERY_HIGH_VALUE = 0;
    /**
     * <code>HIGH = 1;</code>
     */
    public static final int HIGH_VALUE = 1;
    /**
     * <code>MEDIUM = 2;</code>
     */
    public static final int MEDIUM_VALUE = 2;
    /**
     * <code>LOW = 3;</code>
     */
    public static final int LOW_VALUE = 3;
    /**
     * <code>VERY_LOW = 4;</code>
     */
    public static final int VERY_LOW_VALUE = 4;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CryptoPriceVolatility valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static CryptoPriceVolatility forNumber(int value) {
      switch (value) {
        case 0: return VERY_HIGH;
        case 1: return HIGH;
        case 2: return MEDIUM;
        case 3: return LOW;
        case 4: return VERY_LOW;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CryptoPriceVolatility>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CryptoPriceVolatility> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CryptoPriceVolatility>() {
            public CryptoPriceVolatility findValueByNumber(int number) {
              return CryptoPriceVolatility.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return CryptoCurrencyPriceInfo.getDescriptor().getEnumTypes().get(0);
    }

    private static final CryptoPriceVolatility[] VALUES = values();

    public static CryptoPriceVolatility valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private CryptoPriceVolatility(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:gen.generated.CryptoCurrencyPriceInfo.CryptoPriceVolatility)
  }

  /**
   * Protobuf enum {@code gen.generated.CryptoCurrencyPriceInfo.Recommendation}
   */
  public enum Recommendation
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>SELL = 0;</code>
     */
    SELL(0),
    /**
     * <code>HOLD = 1;</code>
     */
    HOLD(1),
    /**
     * <code>BUY = 2;</code>
     */
    BUY(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>SELL = 0;</code>
     */
    public static final int SELL_VALUE = 0;
    /**
     * <code>HOLD = 1;</code>
     */
    public static final int HOLD_VALUE = 1;
    /**
     * <code>BUY = 2;</code>
     */
    public static final int BUY_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Recommendation valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Recommendation forNumber(int value) {
      switch (value) {
        case 0: return SELL;
        case 1: return HOLD;
        case 2: return BUY;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Recommendation>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Recommendation> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Recommendation>() {
            public Recommendation findValueByNumber(int number) {
              return Recommendation.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return CryptoCurrencyPriceInfo.getDescriptor().getEnumTypes().get(1);
    }

    private static final Recommendation[] VALUES = values();

    public static Recommendation valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Recommendation(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:gen.generated.CryptoCurrencyPriceInfo.Recommendation)
  }

  public interface PriceOnStockExchangeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:gen.generated.CryptoCurrencyPriceInfo.PriceOnStockExchange)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string stockExchangeName = 1;</code>
     * @return The stockExchangeName.
     */
    java.lang.String getStockExchangeName();
    /**
     * <code>string stockExchangeName = 1;</code>
     * @return The bytes for stockExchangeName.
     */
    com.google.protobuf.ByteString
        getStockExchangeNameBytes();

    /**
     * <code>double price = 2;</code>
     * @return The price.
     */
    double getPrice();
  }
  /**
   * Protobuf type {@code gen.generated.CryptoCurrencyPriceInfo.PriceOnStockExchange}
   */
  public static final class PriceOnStockExchange extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:gen.generated.CryptoCurrencyPriceInfo.PriceOnStockExchange)
      PriceOnStockExchangeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PriceOnStockExchange.newBuilder() to construct.
    private PriceOnStockExchange(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PriceOnStockExchange() {
      stockExchangeName_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new PriceOnStockExchange();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PriceOnStockExchange(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              stockExchangeName_ = s;
              break;
            }
            case 17: {

              price_ = input.readDouble();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return CryptoCurrencyPriceInfoOuterClass.internal_static_CryptoCurrencyPriceInfo_PriceOnStockExchange_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return CryptoCurrencyPriceInfoOuterClass.internal_static_CryptoCurrencyPriceInfo_PriceOnStockExchange_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              CryptoCurrencyPriceInfo.PriceOnStockExchange.class, CryptoCurrencyPriceInfo.PriceOnStockExchange.Builder.class);
    }

    public static final int STOCKEXCHANGENAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object stockExchangeName_;
    /**
     * <code>string stockExchangeName = 1;</code>
     * @return The stockExchangeName.
     */
    @java.lang.Override
    public java.lang.String getStockExchangeName() {
      java.lang.Object ref = stockExchangeName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        stockExchangeName_ = s;
        return s;
      }
    }
    /**
     * <code>string stockExchangeName = 1;</code>
     * @return The bytes for stockExchangeName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getStockExchangeNameBytes() {
      java.lang.Object ref = stockExchangeName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        stockExchangeName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PRICE_FIELD_NUMBER = 2;
    private double price_;
    /**
     * <code>double price = 2;</code>
     * @return The price.
     */
    @java.lang.Override
    public double getPrice() {
      return price_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getStockExchangeNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, stockExchangeName_);
      }
      if (price_ != 0D) {
        output.writeDouble(2, price_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getStockExchangeNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, stockExchangeName_);
      }
      if (price_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, price_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof CryptoCurrencyPriceInfo.PriceOnStockExchange)) {
        return super.equals(obj);
      }
      CryptoCurrencyPriceInfo.PriceOnStockExchange other = (CryptoCurrencyPriceInfo.PriceOnStockExchange) obj;

      if (!getStockExchangeName()
          .equals(other.getStockExchangeName())) return false;
      if (java.lang.Double.doubleToLongBits(getPrice())
          != java.lang.Double.doubleToLongBits(
              other.getPrice())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + STOCKEXCHANGENAME_FIELD_NUMBER;
      hash = (53 * hash) + getStockExchangeName().hashCode();
      hash = (37 * hash) + PRICE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getPrice()));
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static CryptoCurrencyPriceInfo.PriceOnStockExchange parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CryptoCurrencyPriceInfo.PriceOnStockExchange parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CryptoCurrencyPriceInfo.PriceOnStockExchange parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CryptoCurrencyPriceInfo.PriceOnStockExchange parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CryptoCurrencyPriceInfo.PriceOnStockExchange parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CryptoCurrencyPriceInfo.PriceOnStockExchange parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CryptoCurrencyPriceInfo.PriceOnStockExchange parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static CryptoCurrencyPriceInfo.PriceOnStockExchange parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static CryptoCurrencyPriceInfo.PriceOnStockExchange parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static CryptoCurrencyPriceInfo.PriceOnStockExchange parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static CryptoCurrencyPriceInfo.PriceOnStockExchange parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static CryptoCurrencyPriceInfo.PriceOnStockExchange parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(CryptoCurrencyPriceInfo.PriceOnStockExchange prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gen.generated.CryptoCurrencyPriceInfo.PriceOnStockExchange}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:gen.generated.CryptoCurrencyPriceInfo.PriceOnStockExchange)
        CryptoCurrencyPriceInfo.PriceOnStockExchangeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return CryptoCurrencyPriceInfoOuterClass.internal_static_CryptoCurrencyPriceInfo_PriceOnStockExchange_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return CryptoCurrencyPriceInfoOuterClass.internal_static_CryptoCurrencyPriceInfo_PriceOnStockExchange_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                CryptoCurrencyPriceInfo.PriceOnStockExchange.class, CryptoCurrencyPriceInfo.PriceOnStockExchange.Builder.class);
      }

      // Construct using gen.generated.CryptoCurrencyPriceInfo.PriceOnStockExchange.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        stockExchangeName_ = "";

        price_ = 0D;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return CryptoCurrencyPriceInfoOuterClass.internal_static_CryptoCurrencyPriceInfo_PriceOnStockExchange_descriptor;
      }

      @java.lang.Override
      public CryptoCurrencyPriceInfo.PriceOnStockExchange getDefaultInstanceForType() {
        return CryptoCurrencyPriceInfo.PriceOnStockExchange.getDefaultInstance();
      }

      @java.lang.Override
      public CryptoCurrencyPriceInfo.PriceOnStockExchange build() {
        CryptoCurrencyPriceInfo.PriceOnStockExchange result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public CryptoCurrencyPriceInfo.PriceOnStockExchange buildPartial() {
        CryptoCurrencyPriceInfo.PriceOnStockExchange result = new CryptoCurrencyPriceInfo.PriceOnStockExchange(this);
        result.stockExchangeName_ = stockExchangeName_;
        result.price_ = price_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof CryptoCurrencyPriceInfo.PriceOnStockExchange) {
          return mergeFrom((CryptoCurrencyPriceInfo.PriceOnStockExchange)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(CryptoCurrencyPriceInfo.PriceOnStockExchange other) {
        if (other == CryptoCurrencyPriceInfo.PriceOnStockExchange.getDefaultInstance()) return this;
        if (!other.getStockExchangeName().isEmpty()) {
          stockExchangeName_ = other.stockExchangeName_;
          onChanged();
        }
        if (other.getPrice() != 0D) {
          setPrice(other.getPrice());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        CryptoCurrencyPriceInfo.PriceOnStockExchange parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (CryptoCurrencyPriceInfo.PriceOnStockExchange) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object stockExchangeName_ = "";
      /**
       * <code>string stockExchangeName = 1;</code>
       * @return The stockExchangeName.
       */
      public java.lang.String getStockExchangeName() {
        java.lang.Object ref = stockExchangeName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          stockExchangeName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string stockExchangeName = 1;</code>
       * @return The bytes for stockExchangeName.
       */
      public com.google.protobuf.ByteString
          getStockExchangeNameBytes() {
        java.lang.Object ref = stockExchangeName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          stockExchangeName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string stockExchangeName = 1;</code>
       * @param value The stockExchangeName to set.
       * @return This builder for chaining.
       */
      public Builder setStockExchangeName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        stockExchangeName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string stockExchangeName = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearStockExchangeName() {
        
        stockExchangeName_ = getDefaultInstance().getStockExchangeName();
        onChanged();
        return this;
      }
      /**
       * <code>string stockExchangeName = 1;</code>
       * @param value The bytes for stockExchangeName to set.
       * @return This builder for chaining.
       */
      public Builder setStockExchangeNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        stockExchangeName_ = value;
        onChanged();
        return this;
      }

      private double price_ ;
      /**
       * <code>double price = 2;</code>
       * @return The price.
       */
      @java.lang.Override
      public double getPrice() {
        return price_;
      }
      /**
       * <code>double price = 2;</code>
       * @param value The price to set.
       * @return This builder for chaining.
       */
      public Builder setPrice(double value) {
        
        price_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double price = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearPrice() {
        
        price_ = 0D;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:gen.generated.CryptoCurrencyPriceInfo.PriceOnStockExchange)
    }

    // @@protoc_insertion_point(class_scope:gen.generated.CryptoCurrencyPriceInfo.PriceOnStockExchange)
    private static final CryptoCurrencyPriceInfo.PriceOnStockExchange DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new CryptoCurrencyPriceInfo.PriceOnStockExchange();
    }

    public static CryptoCurrencyPriceInfo.PriceOnStockExchange getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PriceOnStockExchange>
        PARSER = new com.google.protobuf.AbstractParser<PriceOnStockExchange>() {
      @java.lang.Override
      public PriceOnStockExchange parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PriceOnStockExchange(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PriceOnStockExchange> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PriceOnStockExchange> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public CryptoCurrencyPriceInfo.PriceOnStockExchange getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public static final int CRYPTONAME_FIELD_NUMBER = 1;
  private volatile java.lang.Object cryptoName_;
  /**
   * <code>string cryptoName = 1;</code>
   * @return The cryptoName.
   */
  @java.lang.Override
  public java.lang.String getCryptoName() {
    java.lang.Object ref = cryptoName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      cryptoName_ = s;
      return s;
    }
  }
  /**
   * <code>string cryptoName = 1;</code>
   * @return The bytes for cryptoName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getCryptoNameBytes() {
    java.lang.Object ref = cryptoName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      cryptoName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PRICEVOLATILITY_FIELD_NUMBER = 2;
  private int priceVolatility_;
  /**
   * <code>.gen.generated.CryptoCurrencyPriceInfo.CryptoPriceVolatility priceVolatility = 2;</code>
   * @return The enum numeric value on the wire for priceVolatility.
   */
  @java.lang.Override public int getPriceVolatilityValue() {
    return priceVolatility_;
  }
  /**
   * <code>.gen.generated.CryptoCurrencyPriceInfo.CryptoPriceVolatility priceVolatility = 2;</code>
   * @return The priceVolatility.
   */
  @java.lang.Override public CryptoCurrencyPriceInfo.CryptoPriceVolatility getPriceVolatility() {
    @SuppressWarnings("deprecation")
    CryptoCurrencyPriceInfo.CryptoPriceVolatility result = CryptoCurrencyPriceInfo.CryptoPriceVolatility.valueOf(priceVolatility_);
    return result == null ? CryptoCurrencyPriceInfo.CryptoPriceVolatility.UNRECOGNIZED : result;
  }

  public static final int RECOMMENDATION_FIELD_NUMBER = 3;
  private int recommendation_;
  /**
   * <code>.gen.generated.CryptoCurrencyPriceInfo.Recommendation recommendation = 3;</code>
   * @return The enum numeric value on the wire for recommendation.
   */
  @java.lang.Override public int getRecommendationValue() {
    return recommendation_;
  }
  /**
   * <code>.gen.generated.CryptoCurrencyPriceInfo.Recommendation recommendation = 3;</code>
   * @return The recommendation.
   */
  @java.lang.Override public CryptoCurrencyPriceInfo.Recommendation getRecommendation() {
    @SuppressWarnings("deprecation")
    CryptoCurrencyPriceInfo.Recommendation result = CryptoCurrencyPriceInfo.Recommendation.valueOf(recommendation_);
    return result == null ? CryptoCurrencyPriceInfo.Recommendation.UNRECOGNIZED : result;
  }

  public static final int PRICEONSTOCKEXCHANGE_FIELD_NUMBER = 4;
  private java.util.List<CryptoCurrencyPriceInfo.PriceOnStockExchange> priceOnStockExchange_;
  /**
   * <code>repeated .gen.generated.CryptoCurrencyPriceInfo.PriceOnStockExchange priceOnStockExchange = 4;</code>
   */
  @java.lang.Override
  public java.util.List<CryptoCurrencyPriceInfo.PriceOnStockExchange> getPriceOnStockExchangeList() {
    return priceOnStockExchange_;
  }
  /**
   * <code>repeated .gen.generated.CryptoCurrencyPriceInfo.PriceOnStockExchange priceOnStockExchange = 4;</code>
   */
  @java.lang.Override
  public java.util.List<? extends CryptoCurrencyPriceInfo.PriceOnStockExchangeOrBuilder> 
      getPriceOnStockExchangeOrBuilderList() {
    return priceOnStockExchange_;
  }
  /**
   * <code>repeated .gen.generated.CryptoCurrencyPriceInfo.PriceOnStockExchange priceOnStockExchange = 4;</code>
   */
  @java.lang.Override
  public int getPriceOnStockExchangeCount() {
    return priceOnStockExchange_.size();
  }
  /**
   * <code>repeated .gen.generated.CryptoCurrencyPriceInfo.PriceOnStockExchange priceOnStockExchange = 4;</code>
   */
  @java.lang.Override
  public CryptoCurrencyPriceInfo.PriceOnStockExchange getPriceOnStockExchange(int index) {
    return priceOnStockExchange_.get(index);
  }
  /**
   * <code>repeated .gen.generated.CryptoCurrencyPriceInfo.PriceOnStockExchange priceOnStockExchange = 4;</code>
   */
  @java.lang.Override
  public CryptoCurrencyPriceInfo.PriceOnStockExchangeOrBuilder getPriceOnStockExchangeOrBuilder(
      int index) {
    return priceOnStockExchange_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getCryptoNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, cryptoName_);
    }
    if (priceVolatility_ != CryptoCurrencyPriceInfo.CryptoPriceVolatility.VERY_HIGH.getNumber()) {
      output.writeEnum(2, priceVolatility_);
    }
    if (recommendation_ != CryptoCurrencyPriceInfo.Recommendation.SELL.getNumber()) {
      output.writeEnum(3, recommendation_);
    }
    for (int i = 0; i < priceOnStockExchange_.size(); i++) {
      output.writeMessage(4, priceOnStockExchange_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getCryptoNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, cryptoName_);
    }
    if (priceVolatility_ != CryptoCurrencyPriceInfo.CryptoPriceVolatility.VERY_HIGH.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, priceVolatility_);
    }
    if (recommendation_ != CryptoCurrencyPriceInfo.Recommendation.SELL.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(3, recommendation_);
    }
    for (int i = 0; i < priceOnStockExchange_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, priceOnStockExchange_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof CryptoCurrencyPriceInfo)) {
      return super.equals(obj);
    }
    CryptoCurrencyPriceInfo other = (CryptoCurrencyPriceInfo) obj;

    if (!getCryptoName()
        .equals(other.getCryptoName())) return false;
    if (priceVolatility_ != other.priceVolatility_) return false;
    if (recommendation_ != other.recommendation_) return false;
    if (!getPriceOnStockExchangeList()
        .equals(other.getPriceOnStockExchangeList())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + CRYPTONAME_FIELD_NUMBER;
    hash = (53 * hash) + getCryptoName().hashCode();
    hash = (37 * hash) + PRICEVOLATILITY_FIELD_NUMBER;
    hash = (53 * hash) + priceVolatility_;
    hash = (37 * hash) + RECOMMENDATION_FIELD_NUMBER;
    hash = (53 * hash) + recommendation_;
    if (getPriceOnStockExchangeCount() > 0) {
      hash = (37 * hash) + PRICEONSTOCKEXCHANGE_FIELD_NUMBER;
      hash = (53 * hash) + getPriceOnStockExchangeList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static CryptoCurrencyPriceInfo parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static CryptoCurrencyPriceInfo parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static CryptoCurrencyPriceInfo parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static CryptoCurrencyPriceInfo parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static CryptoCurrencyPriceInfo parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static CryptoCurrencyPriceInfo parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static CryptoCurrencyPriceInfo parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static CryptoCurrencyPriceInfo parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static CryptoCurrencyPriceInfo parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static CryptoCurrencyPriceInfo parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static CryptoCurrencyPriceInfo parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static CryptoCurrencyPriceInfo parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(CryptoCurrencyPriceInfo prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code gen.generated.CryptoCurrencyPriceInfo}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:gen.generated.CryptoCurrencyPriceInfo)
      CryptoCurrencyPriceInfoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return CryptoCurrencyPriceInfoOuterClass.internal_static_CryptoCurrencyPriceInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return CryptoCurrencyPriceInfoOuterClass.internal_static_CryptoCurrencyPriceInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              CryptoCurrencyPriceInfo.class, CryptoCurrencyPriceInfo.Builder.class);
    }

    // Construct using gen.generated.CryptoCurrencyPriceInfo.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getPriceOnStockExchangeFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      cryptoName_ = "";

      priceVolatility_ = 0;

      recommendation_ = 0;

      if (priceOnStockExchangeBuilder_ == null) {
        priceOnStockExchange_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        priceOnStockExchangeBuilder_.clear();
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return CryptoCurrencyPriceInfoOuterClass.internal_static_CryptoCurrencyPriceInfo_descriptor;
    }

    @java.lang.Override
    public CryptoCurrencyPriceInfo getDefaultInstanceForType() {
      return CryptoCurrencyPriceInfo.getDefaultInstance();
    }

    @java.lang.Override
    public CryptoCurrencyPriceInfo build() {
      CryptoCurrencyPriceInfo result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public CryptoCurrencyPriceInfo buildPartial() {
      CryptoCurrencyPriceInfo result = new CryptoCurrencyPriceInfo(this);
      int from_bitField0_ = bitField0_;
      result.cryptoName_ = cryptoName_;
      result.priceVolatility_ = priceVolatility_;
      result.recommendation_ = recommendation_;
      if (priceOnStockExchangeBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          priceOnStockExchange_ = java.util.Collections.unmodifiableList(priceOnStockExchange_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.priceOnStockExchange_ = priceOnStockExchange_;
      } else {
        result.priceOnStockExchange_ = priceOnStockExchangeBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof CryptoCurrencyPriceInfo) {
        return mergeFrom((CryptoCurrencyPriceInfo)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(CryptoCurrencyPriceInfo other) {
      if (other == CryptoCurrencyPriceInfo.getDefaultInstance()) return this;
      if (!other.getCryptoName().isEmpty()) {
        cryptoName_ = other.cryptoName_;
        onChanged();
      }
      if (other.priceVolatility_ != 0) {
        setPriceVolatilityValue(other.getPriceVolatilityValue());
      }
      if (other.recommendation_ != 0) {
        setRecommendationValue(other.getRecommendationValue());
      }
      if (priceOnStockExchangeBuilder_ == null) {
        if (!other.priceOnStockExchange_.isEmpty()) {
          if (priceOnStockExchange_.isEmpty()) {
            priceOnStockExchange_ = other.priceOnStockExchange_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensurePriceOnStockExchangeIsMutable();
            priceOnStockExchange_.addAll(other.priceOnStockExchange_);
          }
          onChanged();
        }
      } else {
        if (!other.priceOnStockExchange_.isEmpty()) {
          if (priceOnStockExchangeBuilder_.isEmpty()) {
            priceOnStockExchangeBuilder_.dispose();
            priceOnStockExchangeBuilder_ = null;
            priceOnStockExchange_ = other.priceOnStockExchange_;
            bitField0_ = (bitField0_ & ~0x00000001);
            priceOnStockExchangeBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getPriceOnStockExchangeFieldBuilder() : null;
          } else {
            priceOnStockExchangeBuilder_.addAllMessages(other.priceOnStockExchange_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      CryptoCurrencyPriceInfo parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (CryptoCurrencyPriceInfo) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object cryptoName_ = "";
    /**
     * <code>string cryptoName = 1;</code>
     * @return The cryptoName.
     */
    public java.lang.String getCryptoName() {
      java.lang.Object ref = cryptoName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        cryptoName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string cryptoName = 1;</code>
     * @return The bytes for cryptoName.
     */
    public com.google.protobuf.ByteString
        getCryptoNameBytes() {
      java.lang.Object ref = cryptoName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        cryptoName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string cryptoName = 1;</code>
     * @param value The cryptoName to set.
     * @return This builder for chaining.
     */
    public Builder setCryptoName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      cryptoName_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string cryptoName = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearCryptoName() {
      
      cryptoName_ = getDefaultInstance().getCryptoName();
      onChanged();
      return this;
    }
    /**
     * <code>string cryptoName = 1;</code>
     * @param value The bytes for cryptoName to set.
     * @return This builder for chaining.
     */
    public Builder setCryptoNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      cryptoName_ = value;
      onChanged();
      return this;
    }

    private int priceVolatility_ = 0;
    /**
     * <code>.gen.generated.CryptoCurrencyPriceInfo.CryptoPriceVolatility priceVolatility = 2;</code>
     * @return The enum numeric value on the wire for priceVolatility.
     */
    @java.lang.Override public int getPriceVolatilityValue() {
      return priceVolatility_;
    }
    /**
     * <code>.gen.generated.CryptoCurrencyPriceInfo.CryptoPriceVolatility priceVolatility = 2;</code>
     * @param value The enum numeric value on the wire for priceVolatility to set.
     * @return This builder for chaining.
     */
    public Builder setPriceVolatilityValue(int value) {
      
      priceVolatility_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>.gen.generated.CryptoCurrencyPriceInfo.CryptoPriceVolatility priceVolatility = 2;</code>
     * @return The priceVolatility.
     */
    @java.lang.Override
    public CryptoCurrencyPriceInfo.CryptoPriceVolatility getPriceVolatility() {
      @SuppressWarnings("deprecation")
      CryptoCurrencyPriceInfo.CryptoPriceVolatility result = CryptoCurrencyPriceInfo.CryptoPriceVolatility.valueOf(priceVolatility_);
      return result == null ? CryptoCurrencyPriceInfo.CryptoPriceVolatility.UNRECOGNIZED : result;
    }
    /**
     * <code>.gen.generated.CryptoCurrencyPriceInfo.CryptoPriceVolatility priceVolatility = 2;</code>
     * @param value The priceVolatility to set.
     * @return This builder for chaining.
     */
    public Builder setPriceVolatility(CryptoCurrencyPriceInfo.CryptoPriceVolatility value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      priceVolatility_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.gen.generated.CryptoCurrencyPriceInfo.CryptoPriceVolatility priceVolatility = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearPriceVolatility() {
      
      priceVolatility_ = 0;
      onChanged();
      return this;
    }

    private int recommendation_ = 0;
    /**
     * <code>.gen.generated.CryptoCurrencyPriceInfo.Recommendation recommendation = 3;</code>
     * @return The enum numeric value on the wire for recommendation.
     */
    @java.lang.Override public int getRecommendationValue() {
      return recommendation_;
    }
    /**
     * <code>.gen.generated.CryptoCurrencyPriceInfo.Recommendation recommendation = 3;</code>
     * @param value The enum numeric value on the wire for recommendation to set.
     * @return This builder for chaining.
     */
    public Builder setRecommendationValue(int value) {
      
      recommendation_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>.gen.generated.CryptoCurrencyPriceInfo.Recommendation recommendation = 3;</code>
     * @return The recommendation.
     */
    @java.lang.Override
    public CryptoCurrencyPriceInfo.Recommendation getRecommendation() {
      @SuppressWarnings("deprecation")
      CryptoCurrencyPriceInfo.Recommendation result = CryptoCurrencyPriceInfo.Recommendation.valueOf(recommendation_);
      return result == null ? CryptoCurrencyPriceInfo.Recommendation.UNRECOGNIZED : result;
    }
    /**
     * <code>.gen.generated.CryptoCurrencyPriceInfo.Recommendation recommendation = 3;</code>
     * @param value The recommendation to set.
     * @return This builder for chaining.
     */
    public Builder setRecommendation(CryptoCurrencyPriceInfo.Recommendation value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      recommendation_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.gen.generated.CryptoCurrencyPriceInfo.Recommendation recommendation = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearRecommendation() {
      
      recommendation_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<CryptoCurrencyPriceInfo.PriceOnStockExchange> priceOnStockExchange_ =
      java.util.Collections.emptyList();
    private void ensurePriceOnStockExchangeIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        priceOnStockExchange_ = new java.util.ArrayList<CryptoCurrencyPriceInfo.PriceOnStockExchange>(priceOnStockExchange_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        CryptoCurrencyPriceInfo.PriceOnStockExchange, CryptoCurrencyPriceInfo.PriceOnStockExchange.Builder, CryptoCurrencyPriceInfo.PriceOnStockExchangeOrBuilder> priceOnStockExchangeBuilder_;

    /**
     * <code>repeated .gen.generated.CryptoCurrencyPriceInfo.PriceOnStockExchange priceOnStockExchange = 4;</code>
     */
    public java.util.List<CryptoCurrencyPriceInfo.PriceOnStockExchange> getPriceOnStockExchangeList() {
      if (priceOnStockExchangeBuilder_ == null) {
        return java.util.Collections.unmodifiableList(priceOnStockExchange_);
      } else {
        return priceOnStockExchangeBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .gen.generated.CryptoCurrencyPriceInfo.PriceOnStockExchange priceOnStockExchange = 4;</code>
     */
    public int getPriceOnStockExchangeCount() {
      if (priceOnStockExchangeBuilder_ == null) {
        return priceOnStockExchange_.size();
      } else {
        return priceOnStockExchangeBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .gen.generated.CryptoCurrencyPriceInfo.PriceOnStockExchange priceOnStockExchange = 4;</code>
     */
    public CryptoCurrencyPriceInfo.PriceOnStockExchange getPriceOnStockExchange(int index) {
      if (priceOnStockExchangeBuilder_ == null) {
        return priceOnStockExchange_.get(index);
      } else {
        return priceOnStockExchangeBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .gen.generated.CryptoCurrencyPriceInfo.PriceOnStockExchange priceOnStockExchange = 4;</code>
     */
    public Builder setPriceOnStockExchange(
        int index, CryptoCurrencyPriceInfo.PriceOnStockExchange value) {
      if (priceOnStockExchangeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePriceOnStockExchangeIsMutable();
        priceOnStockExchange_.set(index, value);
        onChanged();
      } else {
        priceOnStockExchangeBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .gen.generated.CryptoCurrencyPriceInfo.PriceOnStockExchange priceOnStockExchange = 4;</code>
     */
    public Builder setPriceOnStockExchange(
        int index, CryptoCurrencyPriceInfo.PriceOnStockExchange.Builder builderForValue) {
      if (priceOnStockExchangeBuilder_ == null) {
        ensurePriceOnStockExchangeIsMutable();
        priceOnStockExchange_.set(index, builderForValue.build());
        onChanged();
      } else {
        priceOnStockExchangeBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .gen.generated.CryptoCurrencyPriceInfo.PriceOnStockExchange priceOnStockExchange = 4;</code>
     */
    public Builder addPriceOnStockExchange(CryptoCurrencyPriceInfo.PriceOnStockExchange value) {
      if (priceOnStockExchangeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePriceOnStockExchangeIsMutable();
        priceOnStockExchange_.add(value);
        onChanged();
      } else {
        priceOnStockExchangeBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .gen.generated.CryptoCurrencyPriceInfo.PriceOnStockExchange priceOnStockExchange = 4;</code>
     */
    public Builder addPriceOnStockExchange(
        int index, CryptoCurrencyPriceInfo.PriceOnStockExchange value) {
      if (priceOnStockExchangeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePriceOnStockExchangeIsMutable();
        priceOnStockExchange_.add(index, value);
        onChanged();
      } else {
        priceOnStockExchangeBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .gen.generated.CryptoCurrencyPriceInfo.PriceOnStockExchange priceOnStockExchange = 4;</code>
     */
    public Builder addPriceOnStockExchange(
        CryptoCurrencyPriceInfo.PriceOnStockExchange.Builder builderForValue) {
      if (priceOnStockExchangeBuilder_ == null) {
        ensurePriceOnStockExchangeIsMutable();
        priceOnStockExchange_.add(builderForValue.build());
        onChanged();
      } else {
        priceOnStockExchangeBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .gen.generated.CryptoCurrencyPriceInfo.PriceOnStockExchange priceOnStockExchange = 4;</code>
     */
    public Builder addPriceOnStockExchange(
        int index, CryptoCurrencyPriceInfo.PriceOnStockExchange.Builder builderForValue) {
      if (priceOnStockExchangeBuilder_ == null) {
        ensurePriceOnStockExchangeIsMutable();
        priceOnStockExchange_.add(index, builderForValue.build());
        onChanged();
      } else {
        priceOnStockExchangeBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .gen.generated.CryptoCurrencyPriceInfo.PriceOnStockExchange priceOnStockExchange = 4;</code>
     */
    public Builder addAllPriceOnStockExchange(
        java.lang.Iterable<? extends CryptoCurrencyPriceInfo.PriceOnStockExchange> values) {
      if (priceOnStockExchangeBuilder_ == null) {
        ensurePriceOnStockExchangeIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, priceOnStockExchange_);
        onChanged();
      } else {
        priceOnStockExchangeBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .gen.generated.CryptoCurrencyPriceInfo.PriceOnStockExchange priceOnStockExchange = 4;</code>
     */
    public Builder clearPriceOnStockExchange() {
      if (priceOnStockExchangeBuilder_ == null) {
        priceOnStockExchange_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        priceOnStockExchangeBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .gen.generated.CryptoCurrencyPriceInfo.PriceOnStockExchange priceOnStockExchange = 4;</code>
     */
    public Builder removePriceOnStockExchange(int index) {
      if (priceOnStockExchangeBuilder_ == null) {
        ensurePriceOnStockExchangeIsMutable();
        priceOnStockExchange_.remove(index);
        onChanged();
      } else {
        priceOnStockExchangeBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .gen.generated.CryptoCurrencyPriceInfo.PriceOnStockExchange priceOnStockExchange = 4;</code>
     */
    public CryptoCurrencyPriceInfo.PriceOnStockExchange.Builder getPriceOnStockExchangeBuilder(
        int index) {
      return getPriceOnStockExchangeFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .gen.generated.CryptoCurrencyPriceInfo.PriceOnStockExchange priceOnStockExchange = 4;</code>
     */
    public CryptoCurrencyPriceInfo.PriceOnStockExchangeOrBuilder getPriceOnStockExchangeOrBuilder(
        int index) {
      if (priceOnStockExchangeBuilder_ == null) {
        return priceOnStockExchange_.get(index);  } else {
        return priceOnStockExchangeBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .gen.generated.CryptoCurrencyPriceInfo.PriceOnStockExchange priceOnStockExchange = 4;</code>
     */
    public java.util.List<? extends CryptoCurrencyPriceInfo.PriceOnStockExchangeOrBuilder> 
         getPriceOnStockExchangeOrBuilderList() {
      if (priceOnStockExchangeBuilder_ != null) {
        return priceOnStockExchangeBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(priceOnStockExchange_);
      }
    }
    /**
     * <code>repeated .gen.generated.CryptoCurrencyPriceInfo.PriceOnStockExchange priceOnStockExchange = 4;</code>
     */
    public CryptoCurrencyPriceInfo.PriceOnStockExchange.Builder addPriceOnStockExchangeBuilder() {
      return getPriceOnStockExchangeFieldBuilder().addBuilder(
          CryptoCurrencyPriceInfo.PriceOnStockExchange.getDefaultInstance());
    }
    /**
     * <code>repeated .gen.generated.CryptoCurrencyPriceInfo.PriceOnStockExchange priceOnStockExchange = 4;</code>
     */
    public CryptoCurrencyPriceInfo.PriceOnStockExchange.Builder addPriceOnStockExchangeBuilder(
        int index) {
      return getPriceOnStockExchangeFieldBuilder().addBuilder(
          index, CryptoCurrencyPriceInfo.PriceOnStockExchange.getDefaultInstance());
    }
    /**
     * <code>repeated .gen.generated.CryptoCurrencyPriceInfo.PriceOnStockExchange priceOnStockExchange = 4;</code>
     */
    public java.util.List<CryptoCurrencyPriceInfo.PriceOnStockExchange.Builder> 
         getPriceOnStockExchangeBuilderList() {
      return getPriceOnStockExchangeFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        CryptoCurrencyPriceInfo.PriceOnStockExchange, CryptoCurrencyPriceInfo.PriceOnStockExchange.Builder, CryptoCurrencyPriceInfo.PriceOnStockExchangeOrBuilder> 
        getPriceOnStockExchangeFieldBuilder() {
      if (priceOnStockExchangeBuilder_ == null) {
        priceOnStockExchangeBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            CryptoCurrencyPriceInfo.PriceOnStockExchange, CryptoCurrencyPriceInfo.PriceOnStockExchange.Builder, CryptoCurrencyPriceInfo.PriceOnStockExchangeOrBuilder>(
                priceOnStockExchange_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        priceOnStockExchange_ = null;
      }
      return priceOnStockExchangeBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:gen.generated.CryptoCurrencyPriceInfo)
  }

  // @@protoc_insertion_point(class_scope:gen.generated.CryptoCurrencyPriceInfo)
  private static final CryptoCurrencyPriceInfo DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new CryptoCurrencyPriceInfo();
  }

  public static CryptoCurrencyPriceInfo getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<CryptoCurrencyPriceInfo>
      PARSER = new com.google.protobuf.AbstractParser<CryptoCurrencyPriceInfo>() {
    @java.lang.Override
    public CryptoCurrencyPriceInfo parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new CryptoCurrencyPriceInfo(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<CryptoCurrencyPriceInfo> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<CryptoCurrencyPriceInfo> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public CryptoCurrencyPriceInfo getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

